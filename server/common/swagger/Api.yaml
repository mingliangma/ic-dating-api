swagger: '2.0'
info:
  description: Api specs for ICDating
  version: 1.0.0-b1
  title: IC Dating API
  contact:
    email: charlie@aworkingapp.com
basePath: /api/v1
tags:
  - name: account
    description: Everything about account account
schemes:
  - http
paths:
  /account/me:
    get:
      tags:
        - account
      summary: Verify API token to see it its still valid
      description: ''
      operationId: verifyApiToken
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: token
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Token still valid
          schema:
            $ref: '#/definitions/AccountVM'
        '401':
          description: Token is no longer valid
  '/account/verify/phone/{phoneNum}':
    post:
      tags:
        - account
      summary: 'Verify account phone number, sends out verification code if necessary'
      description: ''
      operationId: verifyPhoneNumber
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: phoneNum
          in: path
          description: Phone number of current account. The number must be in the E.164 Format. Eg. +14155552671 for Country Code 1, +442071838750 for Country Code 44.
          required: true
          type: string
        - in: query
          name: disableSMS
          type: boolean
          description: if true send SMS is disabled. The OTP code can be retrieve through API response.
          default: false
        - in: query
          name: disablePasswordLogin
          type: boolean
          description: if true, the API will force to return a OTP code
          default: false
      responses:
        '200':
          description: Account already exist and account can use password to login
        '201':
          description: >-
            Verification code sent, and record created, regardless whether user
            has sent the reuqest before
        '400':
          description: Invalid Request
        '500':
          description: Server internal error
  '/account/verify/phone/{phoneNum}/code/{code}':
    post:
      tags:
        - account
      summary: 'Verify account phone number, sends out verification code if necessary'
      description: ''
      operationId: verifyVerificationCode
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: phoneNum
          in: path
          description: phone number of current account
          required: true
          type: string
        - name: code
          in: path
          description: verification code client received
          required: true
          type: string
      responses:
        '200':
          description: Successfully verfied
          schema:
            $ref: '#/definitions/Token'
        '400':
          description: 'Invalid Request, or wrong verification code'
        '401':
          description: 'Fail to verify verification code, it may goes expired or wrong'
        '403':
          description: 'The phone number already exist'
        '500':
          description: Server internal error
  /account:
    put:
      tags:
        - account
      summary: Register a account Account
      operationId: registerAccount
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: token
          in: header
          description: temperoy token issued by the server for Account registeration
          required: true
          type: string
        - name: account
          in: body
          description: account to create
          required: true
          schema:
            $ref: '#/definitions/AccountCreation'
      responses:
        '201':
          description: >-
            Successfully created account, a response token is generated for
            accessing APIs
          schema:
            $ref: '#/definitions/Token'
  /account/login:
    post:
      tags:
        - account
      summary: Login a account Account
      operationId: loginAccount
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: account
          in: body
          description: account to create
          required: true
          schema:
            $ref: '#/definitions/Login'
      responses:
        '201':
          description: >-
            Successfully created account, a response token is generated for
            accessing APIs
          schema:
            $ref: '#/definitions/Token'
        '401':
          description: Fail to login
  /account/{acountId}:
    get:
      tags:
      - account
      summary: Get account info by account ID
      operationId: getAccountByUserId
      produces:
        - application/json
      parameters:
      - name: acountId
        in: path
        description: The account that needs to be fetched.
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AccountVM'
        400:
          description: Invalid username supplied
        404:
          description: User not found
    put:
      tags:
      - account
      summary: Updated account account
      description: This can only be done by the logged in account.
      operationId: updateAccount
      produces:
      - application/json
      parameters:
      - name: acountId
        in: path
        description: acountId that need to be updated
        required: true
        type: string
      - name: token
        in: header
        required: true
        type: string
      - in: body
        name: body
        description: Updated account object
        required: true
        schema:
          $ref: '#/definitions/AccountWithToken'
      responses:
        400:
          description: Invalid account supplied
        404:
          description: Account not found
          
  /account/{accountId}/image:
    get:
      tags:
      - account
      summary: Get account profile images by account ID
      operationId: getImagesByUserId
      produces:
        - application/json
      parameters:
      - name: accountId
        in: path
        description: The account that needs to be fetched.
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ProfilePictureList'
        400:
          description: Invalid username supplied
        404:
          description: User not found
    post:
      tags:
      - account
      summary: Upload account profile images by account ID
      operationId: saveImageByUserId
      consumes:
         - multipart/form-data
      parameters:
         - in: formData
           name: upfile
           type: file
           description: The file to upload.
            
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ProfilePicture'
        400:
          description: Invalid accountId supplied
        404:
          description: User not found
          
  /account/list:
    get:
      tags:
      - search
      summary: Get account info by account ID
      operationId: search
      produces:
        - application/json
      parameters:
      - name: gender
        in: query
        description: men, women, or both
        required: false
        type: string
      - name: agemin
        in: query
        description: 18-99
        required: false
        type: integer
      - name: agemax
        in: query
        description: 18-99
        required: false
        type: integer
      - name: ethnicity
        in: query
        description: Asian, black, latin, indian, nativeamerican, caucasian, other
        required: false
        type: string
      - name: sign
        in: query
        description: sign id with - as seperator. ex 1-2-3-4-5
        required: false
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AccountVM'
        400:
          description: Invalid username supplied
        404:
          description: User not found

definitions:
  Token:
    type: object
    properties:
      token:
        type: string
  Login:
    type: object
    properties:
      phoneNum:
        type: string
      password:
        type: string
  AccountVM:
    type: object
    properties:
      accountId:
        type: string
      displayName:
        type: string
      ethnicity:
        type: string
      dateOfBirth:
        type: string
      gender:
        type: string
      distance:
        type: integer
      pictures:
        type: array
        items:
          $ref: '#/definitions/ProfilePicture'
      signs:
        type: array
        items:
          $ref: '#/definitions/Sign'
  AccountWithToken:
    type: object
    properties:
      signIds:
        type: array
        items:
            type: integer
  AccountCreation:
    type: object
    properties:
      accountId:
        type: string
      phoneNum:
        type: string
      password:
        type: string
      displayName:
        type: string
      ethnicity:
        type: string
      dateOfBirth:
        type: string
      gender:
        type: string
      avatar:
        type: string
  Sign:
    type: object
    properties:
      signId:
        type: integer
      signName:
        type: string
      signAvatarUrl:
        type: string
      order:
        type: integer
        
  ProfilePictureList:
    type: object
    properties:
      pictures:
        type: array
        items:
          $ref: '#/definitions/ProfilePicture'
          
  ProfilePicture:
    type: object
    properties:
      url:
        type: string